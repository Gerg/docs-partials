To use external Azure file storage for your <%= vars.app_runtime_abbr %> filestore:

1. Select the **External Azure storage** option.

    <%= image_tag("azure/file_storage_azure.png", alt: "At the top of the image is the text 'Configure your Cloud Controller's filesystem:', with a red asterisk to denote that it is a required configuration. Below this text are five radio buttons: four buttons labeled 'Internal WebDAV', 'External S3-compatible file store', 'External Google Cloud Storage with access key and secret key', and 'External Google Cloud Storage with service account'; and one selected radio button labeled 'External Azure Storage'. Below the selected radio button are seven fields with red asterisks labeled, from top to bottom: 'Account name', 'Access key', 'Environment', 'Buildpacks container name', 'Droplets container name', 'Packages container name', and 'Resources container name'. The 'Environment' field contains the text 'AzureCloud'. Next is a disabled checkbox labeled 'Enable backup and restore'. Next are two fields labeled, from top to bottom, 'Restore from storage account' and 'Restore using access key'.", :width => "400") %>

1. To create a new storage account and storage containers for the <%= vars.app_runtime_abbr %> filestore:
   * In the Azure Portal, navigate to the **Storage accounts** tab.
   * Click the **+** icon to add a new storage account.
   * In the **Name** field, enter a unique name for the storage account. This name must be all lowercase and contain 3 to 24 alphanumeric characters.
   * For the **Deployment model**, select **Resource manager**.
   * For **Account kind**, select **General purpose**.
   * For **Performance**, select **Standard**.
   * From the **Replication** dropdown, select **Locally-redundant storage (LRS)**.
   * For **Storage service encryption**, select **Disabled**.
   * From the **Subscription** dropdown, select the subscription where you want to deploy <%= vars.app_runtime_abbr %> resources.
   * For **Resource group**, select **Use existing** and enter the name of the resource group where you deployed <%= vars.app_runtime_abbr %>.
   * From **Location** the dropdown, select the **Location** where you are deploying <%= vars.app_runtime_abbr %>.
   * Click **Create**.
   * After the storage account is created, select the new storage account from the dashboard.
   * Navigate to the **Blob Service** section of the storage account, and then click on **Containers** to create one or more containers in this storage account for buildpacks, droplets, resources, and packages.
   * In **Blob Service**, select **Soft Delete**. In **Soft Delete**, click **Enabled** to enable soft delete in your Azure storage account.
   <p class="note"><strong>Note:</strong> BBR requires that you enable soft delete in your Azure storage account before you enable backup and restore for your Azure blobstores in <%= vars.ops_manager %>. You should set a reasonable retention policy to minimize storage costs. For more information on enabling soft delete in your Azure storage account, see the [Azure documentation](https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-soft-delete#quickstart).</p>
   * For each container that you create, set the **Access type** to **Private**.

1. In <%= vars.app_runtime_abbr %>, enter the name of the storage account you created for **Account name**.

1. In the **Access key** field, enter one of the access keys provided for the storage account. To obtain a value for this fields, visit the Azure Portal, navigate to the **Storage accounts** tab, and click on **Access keys**.

1. For **Environment**, enter the name of the Azure Cloud environment that contains your storage. This value defaults to AzureCloud, but other options include AzureChinaCloud, AzureUSGovernment, and AzureGermanCloud.

1. For **Buildpacks container name**, enter the container name for storing your app buildpacks.

1. For **Droplets container name**, enter the container name for your app droplet storage. <%= vars.company_name %> recommends that you use a unique container name, but you can use the same container name as the previous step.

1. For **Packages container name**, enter the container name for packages. <%= vars.company_name %> recommends that you use a unique container name, but you can use the same container name as the previous step.

1. For **Resources container name**, enter the container name for resources. <%= vars.company_name %> recommends that you use a unique container name, but you can use the same container name as the previous step.

1. (Optional) To enable backup and restore for your Azure blobstores in <%= vars.app_runtime_abbr %>, enable the **Enable backup and restore** checkbox.
  <p class='note'><strong>Note:</strong> Soft deletes must be enabled for all storage containers listed.</p>

1. (Optional) To enable <%= vars.app_runtime_abbr %> to restore your containers to a different Azure storage account than the account where you take backups:
  1. Under **Restore from storage account**, enter the name of the Azure storage account you want to restore your containers from. Leave this field blank if restoring to the same storage account where you take backups.
  1. Under **Restore using access key**, enter the access key for the Azure storage account you specified in **Restore from storage account**. Leave this field blank if restoring to the same storage account where you take backups.

1. Click **Save**.

<p class="note"><strong>Note:</strong> To enable backup and restore of your <%= vars.app_runtime_abbr %> tile that uses an S3-compatible blobstore, see <a href="https://docs.pivotal.io/platform/<%= product_info['local_product_version'].to_s.sub('.','-') %>/customizing/backup-restore/enabling-external-blobstore-backups.html">Enable External Blobstore Backups</a>.</p>
