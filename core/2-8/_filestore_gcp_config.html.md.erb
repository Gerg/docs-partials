<%= vars.app_runtime_abbr %> can use Google Cloud Storage (GCS) as its external filestore by using either a GCP interoperable storage access key or your GCS Service Account.

To configure file storage for GCP, follow one of these procedures:

* Use an access key and secret key. For more information, see [External Google Cloud Storage with Access Key and Secret Key](#manual-storage-key).

* Use a service account. For more information, see [External Google Cloud Storage with Service Account](#manual-storage-account).

<p class='note'><strong>Note:</strong> <%= current_page.data.gcswarning %></p>

#### <a name="manual-storage-key"></a> External Google Cloud Storage with Access Key and Secret Key

1. Select **External Google Cloud Storage with access key and secret key**.
<%= image_tag("gcp/gcp-filestore-gcs-access-key.png", alt: "At the top of the image is the text 'Configure your Cloud Controller's filesystem:', with a red asterisk to denote that it is a required configuration. Below this text are three radio buttons: two buttons labeled 'Internal WebDAV' and 'External S3-compatible file store', and one selected radio button labeled 'External Google Cloud Storage with access key and secret key'. Below the selected radio button are six fields with red asterisks labeled, from top to bottom: 'Access key', 'Secret key', 'Buildpacks bucket name', Droplets bucket name', 'Packages bucket name', and 'Resources bucket name'.") %>

1. Enter values for **Access key** and **Secret key**. To obtain the values for these fields:
   1. In the GCP Console, navigate to the **Storage** tab, then click **Settings**.
   1. Click **Interoperability**.
   1. If necessary, click **Enable interoperability access**. If interoperability access is already enabled, confirm that the default project matches the project where you are installing <%= vars.app_runtime_abbr %>.
   1. Click **Create a new key**.
      <%= image_tag("gcp/gcp-key-secret-create.png") %>
   1. Copy and paste the generated values into the corresponding <%= vars.app_runtime_abbr %> fields. <%= vars.app_runtime_abbr %> uses these values for authentication when connecting to Google Cloud Storage.

1. Enter the names of the storage buckets you created in [Preparing to Deploy <%= vars.ops_manager %> on GCP Manually](https://docs.pivotal.io/platform/ops-manager/<%= vars.current_major_version.sub('.', '-') %>/gcp/prepare-env-manual.html#dbs):
   * **Buildpacks bucket name:** `YOUR-<%= vars.platform_code %>-buildpacks`
   * **Droplets bucket name:** `YOUR-<%= vars.platform_code %>-droplets`
   * **Resources bucket name:** `YOUR-<%= vars.platform_code %>-resources`
   * **Packages bucket name:** `YOUR-<%= vars.platform_code %>-packages`

1. Click **Save**.

#### <a name="manual-storage-account"></a> External Google Cloud Storage with Service Account

<p class='note'><strong>Note:</strong> You can either use the same service account that you created for <%= vars.ops_manager %>, or create a separate service account for <%= vars.app_runtime_abbr %> file storage. To create a separate service account for <%= vars.app_runtime_abbr %> file storage, follow the procedure in <a href="https://docs.pivotal.io/platform/ops-manager/<%= vars.current_major_version.sub('.', '-') %>/gcp/prepare-env-manual.html#iam_account">Set up IAM Service Accounts</a>, but only select the <strong>Storage > Storage Admin</strong> role.</p>

1. Select **External Google Cloud Storage with service account**.
<%= image_tag("gcp/gcp-filestore-gcs-service-account.png", alt: "At the top of the image is the text 'Configure your Cloud Controller's filesystem:', with a red asterisk to denote that it is a required configuration. Below this text are four radio buttons: three buttons labeled 'Internal WebDAV', 'External S3-compatible file store', and 'External Google Cloud Storage with access key and secret key'; and one selected radio button labeled 'External Google Cloud Storage with service account'. Below the selected radio button are two fields with red asterisks labeled, from top to bottom: 'GCP project ID' and 'GCP service account email'. Next is a text area with a red asterisk labeled 'GCP service account key JSON'. Next are five fields with red asterisks labeled, from top to bottom: 'Buildpacks bucket name', 'Droplets bucket name', 'Packages bucket name', 'Resources bucket name', and' Backup bucket name'.") %>

1. For **GCP project ID**, enter the Project ID on your GCP Console that you want to use for your <%= vars.app_runtime_abbr %> file storage.

1. For **GCP service account email**, enter the email address associated with your GCP account.

1. For **GCP service account JSON**, enter the account key that you use to access the specified GCP project, in JSON format.

1. Enter the names of the storage buckets you created in [Preparing to Deploy <%= vars.ops_manager %> on GCP Manually](https://docs.pivotal.io/platform/ops-manager/<%= vars.current_major_version.sub('.', '-') %>/gcp/prepare-env-manual.html#buckets):
   * **Buildpacks bucket name:** `YOUR-<%= vars.platform_code %>-buildpacks`
   * **Droplets bucket name:** `YOUR-<%= vars.platform_code %>-droplets`
   * **Resources bucket name:** `YOUR-<%= vars.platform_code %>-resources`
   * **Packages bucket name:** `YOUR-<%= vars.platform_code %>-packages`
   * **Backup bucket name:** `YOUR-<%= vars.platform_code %>-backup`

1. Click **Save**.
